name: Build OpenWrt arm64 Image

on:
  push:
    branches: [ main, master ]
    paths:
      - '.github/workflows/build-openwrt-arm64.yml'
      - 'Dockerfile'
  workflow_dispatch:

permissions:
  contents: read
  packages: write

env:
  REGISTRY: ghcr.io
  PLATFORM: linux/arm64

jobs:
  build:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Derive lowercase image name
        id: repo
        run: echo "name=${GITHUB_REPOSITORY,,}" >> "$GITHUB_OUTPUT"

      - name: Set up QEMU (for cross-build)
        uses: docker/setup-qemu-action@v3
        with:
          platforms: arm64

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Debug environment
        run: |
          set -eux
          echo "Actor: $GITHUB_ACTOR"
          echo "Repository: $GITHUB_REPOSITORY"
          echo "Lowercase image: ${{ steps.repo.outputs.name }}"
          echo "Workflow permissions (expect packages write):"
          # The following call is just to show docker CLI works; it will not expose the token
          docker info | grep -i username || true
          echo "Buildx version:"; docker buildx version
          echo "Listing existing local images (before build):"; docker image ls | head -n 20

      - name: Extract metadata (tags, labels)
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ steps.repo.outputs.name }}
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=sha
            type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master' }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile
          push: true
          platforms: ${{ env.PLATFORM }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          provenance: false
          no-cache: true

      - name: Inspect pushed main tag (best-effort)
        if: success()
        run: |
          set -eux
          tag=$(echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' | grep ':main$' || true)
          if [ -n "$tag" ]; then
            echo "Inspecting $tag"
            docker buildx imagetools inspect "$tag" || echo "Inspect failed (might be private or push failed)"
          else
            echo "No :main tag in current ref"
          fi

      - name: Summary
        run: |
          echo "Published image(s):"
          echo "${{ steps.meta.outputs.tags }}" | tr ' ' '\n' | sed 's/^/- /'
